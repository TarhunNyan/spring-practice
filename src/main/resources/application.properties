# EDU-Postgres: podcluchenie k DB pod ukazanim polzovatelem
spring.datasource.url=jdbc:postgresql://localhost:5432/education-db-training
spring.datasource.name=root
spring.datasource.username=root
spring.datasource.password=12345678

# EDU-Postgres: ukazivaem Spring, chto ispolzuem PostgresSQL kak ORM
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.database=postgresql
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# EDU-Postgres: ukazivaem postgresql kak dialect dlia inicializacii
spring.sql.init.platform=postgresql

# EDU-Postgres: pri zapuske prilozenia budet peresozdavat DB
#      chtobi sozdavat DB ispolzui "always"
#      chtobi ne sozdavat DB ispolzui "never"
spring.sql.init.mode=always

# EDU-DDL: ispolzuem SQL dlya inicializacii DB i napolnenia
#          database/initDB.sql - sozdaet tablici
#          database/populateDB.sql - zapolnyaet tablici
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.generate-ddl=false
#spring.sql.init.schema-locations=classpath*:database/initDB.sql
#spring.sql.init.data-locations=classpath*:database/populateDB.sql

# EDU-HIBERNATE: sozdaet tablici cherez Hibernate no ne zapolniaet
#                .ddl-auto=create - udaliat starie tablici i sozdaet novie
#                 .ddl-auto=none - nizhego ne meniaet
spring.jpa.hibernate.ddl-auto=create
spring.jpa.generate-ddl=true
